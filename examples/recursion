#!/usr/local/bin/shale

// Simple recursive factorial script.
//
// A loop version is simpler and a little faster, this is just to demonstrate
// that recursion is possible.
//
// To call this you must pass in the value as a replacement, eg
//    ./factorial n=10
// or
//    shale factorial n=10

n initialised not {
  file arg:: shale:: "Usage: %s n={n}\n" printf
  file arg:: shale:: "  eg: %s n=10\n" printf
  1 exit
} ifthen

factorial var
factorial {
  i var i swap =
  i 0 == {
    1
  } {
    i 2 > {
      i i 1 - factorial() *
    } {
      i.value
    } if
  } if
} =

n 0 < {
  "Can't do negative numbers\n" printf
} {
  n int factorial() n int "%d! = %d\n" printf
} if
